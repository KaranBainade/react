{"ast":null,"code":"import { __extends, __read, __spread } from \"tslib\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AnalyticsReactContext } from './AnalyticsReactContext';\nvar ContextTypes = {\n  getAtlaskitAnalyticsEventHandlers: PropTypes.func\n};\n\nvar noop = function () {\n  return [];\n};\n\nvar AnalyticsListener =\n/** @class */\nfunction (_super) {\n  __extends(AnalyticsListener, _super);\n\n  function AnalyticsListener() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.getChildContext = function () {\n      return {\n        getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers\n      };\n    };\n\n    _this.getAnalyticsEventHandlers = function () {\n      var _a = _this.props,\n          channel = _a.channel,\n          onEvent = _a.onEvent;\n      var getAtlaskitAnalyticsEventHandlers = _this.context.getAtlaskitAnalyticsEventHandlers;\n      var parentEventHandlers = typeof getAtlaskitAnalyticsEventHandlers === 'function' && getAtlaskitAnalyticsEventHandlers() || [];\n\n      var handler = function (event, eventChannel) {\n        if (channel === '*' || channel === eventChannel) {\n          onEvent(event, eventChannel);\n        }\n      };\n\n      return __spread([handler], parentEventHandlers);\n    };\n\n    return _this;\n  }\n\n  AnalyticsListener.prototype.render = function () {\n    var _a = this.context.getAtlaskitAnalyticsContext,\n        getAtlaskitAnalyticsContext = _a === void 0 ? noop : _a;\n    var children = this.props.children;\n    return React.createElement(AnalyticsReactContext.Provider, {\n      value: {\n        getAtlaskitAnalyticsEventHandlers: this.getAnalyticsEventHandlers,\n        getAtlaskitAnalyticsContext: getAtlaskitAnalyticsContext\n      }\n    }, children);\n  };\n\n  AnalyticsListener.contextTypes = ContextTypes;\n  AnalyticsListener.childContextTypes = ContextTypes;\n  return AnalyticsListener;\n}(Component);\n\nexport default AnalyticsListener;","map":{"version":3,"sources":["../../src/AnalyticsListener.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,IAAgB,SAAhB,QAAiC,OAAjC;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,SAAS,qBAAT,QAAsC,yBAAtC;AAaA,IAAM,YAAY,GAAG;AACnB,EAAA,iCAAiC,EAAE,SAAS,CAAC;AAD1B,CAArB;;AAIA,IAAM,IAAI,GAAG,YAAA;AAAM,SAAA,EAAA;AAAE,CAArB;;AAEA,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;;AAAhC,WAAA,iBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAIE,IAAA,KAAA,CAAA,eAAA,GAAkB,YAAA;AAAM,aAAC;AACvB,QAAA,iCAAiC,EAAE,KAAI,CAAC;AADjB,OAAD;AAEtB,KAFF;;AAIA,IAAA,KAAA,CAAA,yBAAA,GAA4B,YAAA;AACpB,UAAA,EAAA,GAAA,KAAA,CAAA,KAAA;AAAA,UAAE,OAAA,GAAA,EAAA,CAAA,OAAF;AAAA,UAAW,OAAA,GAAA,EAAA,CAAA,OAAX;AACE,UAAA,iCAAA,GAAA,KAAA,CAAA,OAAA,CAAA,iCAAA;AACR,UAAM,mBAAmB,GACtB,OAAO,iCAAP,KAA6C,UAA7C,IACC,iCAAiC,EADnC,IAEA,EAHF;;AAIA,UAAM,OAAO,GAA4B,UAAC,KAAD,EAAQ,YAAR,EAAoB;AAC3D,YAAI,OAAO,KAAK,GAAZ,IAAmB,OAAO,KAAK,YAAnC,EAAiD;AAC/C,UAAA,OAAO,CAAC,KAAD,EAAQ,YAAR,CAAP;AACD;AACF,OAJD;;AAMA,aAAA,QAAA,CAAA,CAAQ,OAAR,CAAA,EAAoB,mBAApB,CAAA;AACD,KAdD;;;AA8BD;;AAdC,EAAA,iBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACU,QAAA,EAAA,GAAA,KAAA,OAAA,CAAA,2BAAA;AAAA,QAAA,2BAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,EAAA;AACA,QAAA,QAAA,GAAA,KAAA,KAAA,CAAA,QAAA;AACR,WACE,KAAA,CAAA,aAAA,CAAC,qBAAqB,CAAC,QAAvB,EAA+B;AAC7B,MAAA,KAAK,EAAE;AACL,QAAA,iCAAiC,EAAE,KAAK,yBADnC;AAEL,QAAA,2BAA2B,EAAA;AAFtB;AADsB,KAA/B,EAMG,QANH,CADF;AAUD,GAbD;;AAvBO,EAAA,iBAAA,CAAA,YAAA,GAAe,YAAf;AACA,EAAA,iBAAA,CAAA,iBAAA,GAAoB,YAApB;AAoCT,SAAA,iBAAA;AAAC,CAtCD,CAAgC,SAAhC,CAAA;;AAwCA,eAAe,iBAAf","sourceRoot":"","sourcesContent":["import { __extends, __read, __spread } from \"tslib\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AnalyticsReactContext } from './AnalyticsReactContext';\nvar ContextTypes = {\n    getAtlaskitAnalyticsEventHandlers: PropTypes.func,\n};\nvar noop = function () { return []; };\nvar AnalyticsListener = /** @class */ (function (_super) {\n    __extends(AnalyticsListener, _super);\n    function AnalyticsListener() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.getChildContext = function () { return ({\n            getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers,\n        }); };\n        _this.getAnalyticsEventHandlers = function () {\n            var _a = _this.props, channel = _a.channel, onEvent = _a.onEvent;\n            var getAtlaskitAnalyticsEventHandlers = _this.context.getAtlaskitAnalyticsEventHandlers;\n            var parentEventHandlers = (typeof getAtlaskitAnalyticsEventHandlers === 'function' &&\n                getAtlaskitAnalyticsEventHandlers()) ||\n                [];\n            var handler = function (event, eventChannel) {\n                if (channel === '*' || channel === eventChannel) {\n                    onEvent(event, eventChannel);\n                }\n            };\n            return __spread([handler], parentEventHandlers);\n        };\n        return _this;\n    }\n    AnalyticsListener.prototype.render = function () {\n        var _a = this.context.getAtlaskitAnalyticsContext, getAtlaskitAnalyticsContext = _a === void 0 ? noop : _a;\n        var children = this.props.children;\n        return (React.createElement(AnalyticsReactContext.Provider, { value: {\n                getAtlaskitAnalyticsEventHandlers: this.getAnalyticsEventHandlers,\n                getAtlaskitAnalyticsContext: getAtlaskitAnalyticsContext,\n            } }, children));\n    };\n    AnalyticsListener.contextTypes = ContextTypes;\n    AnalyticsListener.childContextTypes = ContextTypes;\n    return AnalyticsListener;\n}(Component));\nexport default AnalyticsListener;\n//# sourceMappingURL=AnalyticsListener.js.map"]},"metadata":{},"sourceType":"module"}