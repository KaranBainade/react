{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React from 'react';\nimport AnalyticsContextConsumer from './AnalyticsContextConsumer';\n\nvar withAnalyticsEvents = function (createEventMap) {\n  return function (WrappedComponent) {\n    var WithAnalyticsEvents = React.forwardRef(function (props, ref) {\n      return React.createElement(AnalyticsContextConsumer, {\n        createEventMap: createEventMap,\n        wrappedComponentProps: props\n      }, function (_a) {\n        var createAnalyticsEvent = _a.createAnalyticsEvent,\n            patchedEventProps = _a.patchedEventProps;\n        return React.createElement(WrappedComponent, __assign({}, props, patchedEventProps, {\n          createAnalyticsEvent: createAnalyticsEvent,\n          ref: ref\n        }));\n      });\n    }); // @ts-ignore\n\n    WithAnalyticsEvents.displayName = \"WithAnalyticsEvents(\" + (WrappedComponent.displayName || WrappedComponent.name) + \")\";\n    return WithAnalyticsEvents;\n  };\n};\n\nexport default withAnalyticsEvents;","map":{"version":3,"sources":["../../src/withAnalyticsEvents.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AAIA,OAAO,wBAAP,MAAqC,4BAArC;;AAYA,IAAM,mBAAmB,GAAG,UAAC,cAAD,EAAgC;AAAK,SAAA,UAI/D,gBAJ+D,EAIC;AAOhE,QAAM,mBAAmB,GAAG,KAAK,CAAC,UAAN,CAC1B,UAAC,KAAD,EAAQ,GAAR,EAAW;AAAK,aACd,KAAA,CAAA,aAAA,CAAC,wBAAD,EAAyB;AACvB,QAAA,cAAc,EAAE,cADO;AAEvB,QAAA,qBAAqB,EAAE;AAFA,OAAzB,EAIG,UAAC,EAAD,EAA4C;YAAzC,oBAAA,GAAA,EAAA,CAAA,oB;YAAsB,iBAAA,GAAA,EAAA,CAAA,iB;AAAwB,eAChD,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB,QAAA,CAAA,EAAA,EACV,KADU,EAEX,iBAFW,EAEM;AACrB,UAAA,oBAAoB,EAAE,oBADD;AAErB,UAAA,GAAG,EAAE;AAFgB,SAFN,CAAjB,CADgD;AALtC,OACd,CADc;AAcf,KAfyB,CAA5B,CAPgE,CAyBhE;;AACA,IAAA,mBAAmB,CAAC,WAApB,GAAkC,0BAAuB,gBAAgB,CAAC,WAAjB,IACvD,gBAAgB,CAAC,IADe,IACX,GADvB;AAGA,WAAO,mBAAP;AAjC+D,GAAA;AAkChE,CAlCD;;AAoCA,eAAe,mBAAf","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport React from 'react';\nimport AnalyticsContextConsumer from './AnalyticsContextConsumer';\nvar withAnalyticsEvents = function (createEventMap) { return function (WrappedComponent) {\n    var WithAnalyticsEvents = React.forwardRef(function (props, ref) { return (React.createElement(AnalyticsContextConsumer, { createEventMap: createEventMap, wrappedComponentProps: props }, function (_a) {\n        var createAnalyticsEvent = _a.createAnalyticsEvent, patchedEventProps = _a.patchedEventProps;\n        return (React.createElement(WrappedComponent, __assign({}, props, patchedEventProps, { createAnalyticsEvent: createAnalyticsEvent, ref: ref })));\n    })); });\n    // @ts-ignore\n    WithAnalyticsEvents.displayName = \"WithAnalyticsEvents(\" + (WrappedComponent.displayName ||\n        WrappedComponent.name) + \")\";\n    return WithAnalyticsEvents;\n}; };\nexport default withAnalyticsEvents;\n//# sourceMappingURL=withAnalyticsEvents.js.map"]},"metadata":{},"sourceType":"module"}