{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { gridSize } from '@atlaskit/theme/constants';\nimport * as colors from '@atlaskit/theme/colors';\nvar BORDER_WIDTH = 2;\nvar ICON_PADDING = 2;\nvar paddingExcludingBorder = gridSize() - BORDER_WIDTH;\nexport default function baseStyles(validationState, isCompact) {\n  return {\n    container: function (css, _a) {\n      var isDisabled = _a.isDisabled;\n      return __assign(__assign({}, css), {\n        // react-select disables pointer events when isDisabled is true.\n        // We override this and make the inner container turn it off instead.\n        pointerEvents: 'all',\n        cursor: isDisabled ? 'not-allowed' : undefined\n      });\n    },\n    control: function (css, _a) {\n      var isFocused = _a.isFocused,\n          isDisabled = _a.isDisabled;\n      var borderColor = isFocused ? colors.B100 : colors.N20;\n      var backgroundColor = isFocused ? colors.N0 : colors.N20;\n\n      if (isDisabled) {\n        backgroundColor = colors.N20;\n      }\n\n      if (validationState === 'error') borderColor = colors.R400;\n      if (validationState === 'success') borderColor = colors.G400;\n      var borderColorHover = isFocused ? colors.B100 : colors.N30;\n      if (validationState === 'error') borderColorHover = colors.R400;\n      if (validationState === 'success') borderColorHover = colors.G400;\n      var transitionDuration = '200ms';\n      return __assign(__assign({}, css), {\n        // Turn pointer events off when disabled - this makes it so hover etc don't work.\n        pointerEvents: isDisabled ? 'none' : undefined,\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        borderStyle: 'solid',\n        borderRadius: '3px',\n        borderWidth: '2px',\n        boxShadow: 'none',\n        minHeight: isCompact ? gridSize() * 4 : gridSize() * 5,\n        padding: 0,\n        transition: \"background-color \" + transitionDuration + \" ease-in-out,\\n        border-color \" + transitionDuration + \" ease-in-out\",\n        msOverflowStyle: '-ms-autohiding-scrollbar',\n        '::-webkit-scrollbar': {\n          height: gridSize(),\n          width: gridSize()\n        },\n        '::-webkit-scrollbar-corner': {\n          display: 'none'\n        },\n        ':hover': {\n          '::-webkit-scrollbar-thumb': {\n            backgroundColor: 'rgba(0,0,0,0.2)'\n          },\n          cursor: 'pointer',\n          backgroundColor: isFocused ? colors.N0 : colors.N30,\n          borderColor: borderColorHover\n        },\n        '::-webkit-scrollbar-thumb:hover': {\n          backgroundColor: 'rgba(0,0,0,0.4)'\n        }\n      });\n    },\n    valueContainer: function (css) {\n      return __assign(__assign({}, css), {\n        paddingLeft: paddingExcludingBorder,\n        paddingRight: paddingExcludingBorder,\n        paddingBottom: isCompact ? 0 : 2,\n        paddingTop: isCompact ? 0 : 2\n      });\n    },\n    clearIndicator: function (css) {\n      return __assign(__assign({}, css), {\n        color: colors.N70,\n        paddingLeft: ICON_PADDING,\n        paddingRight: ICON_PADDING,\n        paddingBottom: isCompact ? 0 : 6,\n        paddingTop: isCompact ? 0 : 6,\n        ':hover': {\n          color: colors.N500\n        }\n      });\n    },\n    loadingIndicator: function (css) {\n      return __assign(__assign({}, css), {\n        paddingBottom: isCompact ? 0 : 6,\n        paddingTop: isCompact ? 0 : 6\n      });\n    },\n    dropdownIndicator: function (css, _a) {\n      var isDisabled = _a.isDisabled;\n      var color = colors.N500;\n\n      if (isDisabled) {\n        color = colors.N70;\n      }\n\n      return __assign(__assign({}, css), {\n        color: color,\n        paddingLeft: ICON_PADDING,\n        paddingRight: ICON_PADDING,\n        paddingBottom: isCompact ? 0 : 6,\n        paddingTop: isCompact ? 0 : 6,\n        ':hover': {\n          color: colors.N200\n        }\n      });\n    },\n    indicatorsContainer: function (css) {\n      return __assign(__assign({}, css), {\n        paddingRight: paddingExcludingBorder - ICON_PADDING\n      });\n    },\n    option: function (css, _a) {\n      var isFocused = _a.isFocused,\n          isSelected = _a.isSelected;\n      var color = isSelected ? colors.N0 : undefined;\n      var backgroundColor;\n      if (isSelected) backgroundColor = colors.N500;else if (isFocused) backgroundColor = colors.N30;\n      return __assign(__assign({}, css), {\n        paddingTop: '6px',\n        paddingBottom: '6px',\n        backgroundColor: backgroundColor,\n        color: color\n      });\n    },\n    placeholder: function (css) {\n      return __assign(__assign({}, css), {\n        color: colors.N100\n      });\n    },\n    singleValue: function (css, _a) {\n      var isDisabled = _a.isDisabled;\n      return __assign(__assign({}, css), {\n        color: isDisabled ? colors.N70 : colors.N800,\n        lineHeight: gridSize() * 2 + \"px\"\n      });\n    },\n    menuList: function (css) {\n      return __assign(__assign({}, css), {\n        paddingTop: gridSize(),\n        paddingBottom: gridSize()\n      });\n    },\n    multiValue: function (css) {\n      return __assign(__assign({}, css), {\n        borderRadius: '2px',\n        backgroundColor: colors.N40,\n        color: colors.N500,\n        maxWidth: '100%'\n      });\n    },\n    multiValueLabel: function (css) {\n      return __assign(__assign({}, css), {\n        padding: '2px',\n        paddingRight: '2px'\n      });\n    },\n    multiValueRemove: function (css, _a) {\n      var isFocused = _a.isFocused;\n      return __assign(__assign({}, css), {\n        backgroundColor: isFocused && colors.R75,\n        color: isFocused && colors.R400,\n        paddingLeft: '2px',\n        paddingRight: '2px',\n        borderRadius: '0px 2px 2px 0px',\n        ':hover': {\n          color: colors.R400,\n          backgroundColor: colors.R75\n        }\n      });\n    }\n  };\n}","map":{"version":3,"sources":["../../src/styles.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { gridSize } from '@atlaskit/theme/constants';\nimport * as colors from '@atlaskit/theme/colors';\nvar BORDER_WIDTH = 2;\nvar ICON_PADDING = 2;\nvar paddingExcludingBorder = gridSize() - BORDER_WIDTH;\nexport default function baseStyles(validationState, isCompact) {\n    return {\n        container: function (css, _a) {\n            var isDisabled = _a.isDisabled;\n            return (__assign(__assign({}, css), { \n                // react-select disables pointer events when isDisabled is true.\n                // We override this and make the inner container turn it off instead.\n                pointerEvents: 'all', cursor: isDisabled ? 'not-allowed' : undefined }));\n        },\n        control: function (css, _a) {\n            var isFocused = _a.isFocused, isDisabled = _a.isDisabled;\n            var borderColor = isFocused ? colors.B100 : colors.N20;\n            var backgroundColor = isFocused ? colors.N0 : colors.N20;\n            if (isDisabled) {\n                backgroundColor = colors.N20;\n            }\n            if (validationState === 'error')\n                borderColor = colors.R400;\n            if (validationState === 'success')\n                borderColor = colors.G400;\n            var borderColorHover = isFocused ? colors.B100 : colors.N30;\n            if (validationState === 'error')\n                borderColorHover = colors.R400;\n            if (validationState === 'success')\n                borderColorHover = colors.G400;\n            var transitionDuration = '200ms';\n            return __assign(__assign({}, css), { \n                // Turn pointer events off when disabled - this makes it so hover etc don't work.\n                pointerEvents: isDisabled ? 'none' : undefined, backgroundColor: backgroundColor,\n                borderColor: borderColor, borderStyle: 'solid', borderRadius: '3px', borderWidth: '2px', boxShadow: 'none', minHeight: isCompact ? gridSize() * 4 : gridSize() * 5, padding: 0, transition: \"background-color \" + transitionDuration + \" ease-in-out,\\n        border-color \" + transitionDuration + \" ease-in-out\", msOverflowStyle: '-ms-autohiding-scrollbar', '::-webkit-scrollbar': {\n                    height: gridSize(),\n                    width: gridSize(),\n                }, '::-webkit-scrollbar-corner': {\n                    display: 'none',\n                }, ':hover': {\n                    '::-webkit-scrollbar-thumb': {\n                        backgroundColor: 'rgba(0,0,0,0.2)',\n                    },\n                    cursor: 'pointer',\n                    backgroundColor: isFocused ? colors.N0 : colors.N30,\n                    borderColor: borderColorHover,\n                }, '::-webkit-scrollbar-thumb:hover': {\n                    backgroundColor: 'rgba(0,0,0,0.4)',\n                } });\n        },\n        valueContainer: function (css) { return (__assign(__assign({}, css), { paddingLeft: paddingExcludingBorder, paddingRight: paddingExcludingBorder, paddingBottom: isCompact ? 0 : 2, paddingTop: isCompact ? 0 : 2 })); },\n        clearIndicator: function (css) { return (__assign(__assign({}, css), { color: colors.N70, paddingLeft: ICON_PADDING, paddingRight: ICON_PADDING, paddingBottom: isCompact ? 0 : 6, paddingTop: isCompact ? 0 : 6, ':hover': {\n                color: colors.N500,\n            } })); },\n        loadingIndicator: function (css) { return (__assign(__assign({}, css), { paddingBottom: isCompact ? 0 : 6, paddingTop: isCompact ? 0 : 6 })); },\n        dropdownIndicator: function (css, _a) {\n            var isDisabled = _a.isDisabled;\n            var color = colors.N500;\n            if (isDisabled) {\n                color = colors.N70;\n            }\n            return __assign(__assign({}, css), { color: color, paddingLeft: ICON_PADDING, paddingRight: ICON_PADDING, paddingBottom: isCompact ? 0 : 6, paddingTop: isCompact ? 0 : 6, ':hover': {\n                    color: colors.N200,\n                } });\n        },\n        indicatorsContainer: function (css) { return (__assign(__assign({}, css), { paddingRight: paddingExcludingBorder - ICON_PADDING })); },\n        option: function (css, _a) {\n            var isFocused = _a.isFocused, isSelected = _a.isSelected;\n            var color = isSelected ? colors.N0 : undefined;\n            var backgroundColor;\n            if (isSelected)\n                backgroundColor = colors.N500;\n            else if (isFocused)\n                backgroundColor = colors.N30;\n            return __assign(__assign({}, css), { paddingTop: '6px', paddingBottom: '6px', backgroundColor: backgroundColor,\n                color: color });\n        },\n        placeholder: function (css) { return (__assign(__assign({}, css), { color: colors.N100 })); },\n        singleValue: function (css, _a) {\n            var isDisabled = _a.isDisabled;\n            return (__assign(__assign({}, css), { color: isDisabled ? colors.N70 : colors.N800, lineHeight: gridSize() * 2 + \"px\" }));\n        },\n        menuList: function (css) { return (__assign(__assign({}, css), { paddingTop: gridSize(), paddingBottom: gridSize() })); },\n        multiValue: function (css) { return (__assign(__assign({}, css), { borderRadius: '2px', backgroundColor: colors.N40, color: colors.N500, maxWidth: '100%' })); },\n        multiValueLabel: function (css) { return (__assign(__assign({}, css), { padding: '2px', paddingRight: '2px' })); },\n        multiValueRemove: function (css, _a) {\n            var isFocused = _a.isFocused;\n            return (__assign(__assign({}, css), { backgroundColor: isFocused && colors.R75, color: isFocused && colors.R400, paddingLeft: '2px', paddingRight: '2px', borderRadius: '0px 2px 2px 0px', ':hover': {\n                    color: colors.R400,\n                    backgroundColor: colors.R75,\n                } }));\n        },\n    };\n}\n//# sourceMappingURL=styles.js.map"]},"metadata":{},"sourceType":"module"}