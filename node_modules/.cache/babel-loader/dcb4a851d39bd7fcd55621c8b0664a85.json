{"ast":null,"code":"import { useContext, useRef } from 'react';\nimport { useCallbackOne } from 'use-memo-one';\nimport { AnalyticsReactContext } from './AnalyticsReactContext';\nimport UIAnalyticsEvent from './UIAnalyticsEvent';\n\nvar noop = function () {\n  return [];\n};\n\nexport function useAnalyticsEvents() {\n  var analyticsContext = useContext(AnalyticsReactContext);\n  var contextRef = useRef(analyticsContext);\n  contextRef.current.getAtlaskitAnalyticsEventHandlers = analyticsContext.getAtlaskitAnalyticsEventHandlers;\n  contextRef.current.getAtlaskitAnalyticsContext = analyticsContext.getAtlaskitAnalyticsContext;\n  var createAnalyticsEvent = useCallbackOne(function (payload) {\n    if (process.env.NODE_ENV !== 'production' && (contextRef.current.getAtlaskitAnalyticsEventHandlers === null || contextRef.current.getAtlaskitAnalyticsContext === null)) {\n      /* eslint-disable-next-line no-console */\n      console.error(\"\\n@atlaskit/analytics-next\\n---\\nNo compatible <AnalyticsListener /> was found to fire this analytics event.\\nUse of the useAnalyticsEvents() hook requires a parent <AnalyticsListener /> from @atlaskit/analytics-next@^6.3.0 or above.\\nSee: https://atlaskit.atlassian.com/packages/core/analytics-next/docs/reference#AnalyticsListener\\n\");\n    }\n\n    var getAtlaskitAnalyticsContext = contextRef.current.getAtlaskitAnalyticsContext || noop;\n    var getAtlaskitAnalyticsEventHandlers = contextRef.current.getAtlaskitAnalyticsEventHandlers || noop;\n    return new UIAnalyticsEvent({\n      context: getAtlaskitAnalyticsContext(),\n      handlers: getAtlaskitAnalyticsEventHandlers(),\n      payload: payload\n    });\n  }, []);\n  return {\n    createAnalyticsEvent: createAnalyticsEvent\n  };\n}","map":{"version":3,"sources":["../../src/useAnalyticsEvents.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,EAAqB,MAArB,QAAmC,OAAnC;AACA,SAAS,cAAT,QAA+B,cAA/B;AACA,SACE,qBADF,QAGO,yBAHP;AAKA,OAAO,gBAAP,MAA6B,oBAA7B;;AAOA,IAAM,IAAI,GAAG,YAAA;AAAM,SAAA,EAAA;AAAE,CAArB;;AAEA,OAAM,SAAU,kBAAV,GAA4B;AAChC,MAAM,gBAAgB,GAAG,UAAU,CAAC,qBAAD,CAAnC;AACA,MAAM,UAAU,GAAG,MAAM,CAAiC,gBAAjC,CAAzB;AACA,EAAA,UAAU,CAAC,OAAX,CAAmB,iCAAnB,GACE,gBAAgB,CAAC,iCADnB;AAEA,EAAA,UAAU,CAAC,OAAX,CAAmB,2BAAnB,GACE,gBAAgB,CAAC,2BADnB;AAGA,MAAM,oBAAoB,GAAG,cAAc,CACzC,UAAC,OAAD,EAA+B;AAC7B,QACE,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,KACC,UAAU,CAAC,OAAX,CAAmB,iCAAnB,KAAyD,IAAzD,IACC,UAAU,CAAC,OAAX,CAAmB,2BAAnB,KAAmD,IAFrD,CADF,EAIE;AACA;AACA,MAAA,OAAO,CAAC,KAAR,CAAc,gVAAd;AAOD;;AAED,QAAM,2BAA2B,GAC/B,UAAU,CAAC,OAAX,CAAmB,2BAAnB,IAAkD,IADpD;AAEA,QAAM,iCAAiC,GACrC,UAAU,CAAC,OAAX,CAAmB,iCAAnB,IAAwD,IAD1D;AAGA,WAAO,IAAI,gBAAJ,CAAqB;AAC1B,MAAA,OAAO,EAAE,2BAA2B,EADV;AAE1B,MAAA,QAAQ,EAAE,iCAAiC,EAFjB;AAG1B,MAAA,OAAO,EAAA;AAHmB,KAArB,CAAP;AAKD,GA3BwC,EA4BzC,EA5ByC,CAA3C;AA+BA,SAAO;AACL,IAAA,oBAAoB,EAAA;AADf,GAAP;AAGD","sourceRoot":"","sourcesContent":["import { useContext, useRef } from 'react';\nimport { useCallbackOne } from 'use-memo-one';\nimport { AnalyticsReactContext, } from './AnalyticsReactContext';\nimport UIAnalyticsEvent from './UIAnalyticsEvent';\nvar noop = function () { return []; };\nexport function useAnalyticsEvents() {\n    var analyticsContext = useContext(AnalyticsReactContext);\n    var contextRef = useRef(analyticsContext);\n    contextRef.current.getAtlaskitAnalyticsEventHandlers =\n        analyticsContext.getAtlaskitAnalyticsEventHandlers;\n    contextRef.current.getAtlaskitAnalyticsContext =\n        analyticsContext.getAtlaskitAnalyticsContext;\n    var createAnalyticsEvent = useCallbackOne(function (payload) {\n        if (process.env.NODE_ENV !== 'production' &&\n            (contextRef.current.getAtlaskitAnalyticsEventHandlers === null ||\n                contextRef.current.getAtlaskitAnalyticsContext === null)) {\n            /* eslint-disable-next-line no-console */\n            console.error(\"\\n@atlaskit/analytics-next\\n---\\nNo compatible <AnalyticsListener /> was found to fire this analytics event.\\nUse of the useAnalyticsEvents() hook requires a parent <AnalyticsListener /> from @atlaskit/analytics-next@^6.3.0 or above.\\nSee: https://atlaskit.atlassian.com/packages/core/analytics-next/docs/reference#AnalyticsListener\\n\");\n        }\n        var getAtlaskitAnalyticsContext = contextRef.current.getAtlaskitAnalyticsContext || noop;\n        var getAtlaskitAnalyticsEventHandlers = contextRef.current.getAtlaskitAnalyticsEventHandlers || noop;\n        return new UIAnalyticsEvent({\n            context: getAtlaskitAnalyticsContext(),\n            handlers: getAtlaskitAnalyticsEventHandlers(),\n            payload: payload,\n        });\n    }, []);\n    return {\n        createAnalyticsEvent: createAnalyticsEvent,\n    };\n}\n//# sourceMappingURL=useAnalyticsEvents.js.map"]},"metadata":{},"sourceType":"module"}