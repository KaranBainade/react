{"ast":null,"code":"import { __assign, __extends, __read, __rest } from \"tslib\";\n/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react';\nimport RadioIcon from '@atlaskit/icon/glyph/radio';\nimport CheckboxIcon from '@atlaskit/icon/glyph/checkbox';\nimport { themed } from '@atlaskit/theme/components';\nimport { gridSize } from '@atlaskit/theme/constants';\nimport * as colors from '@atlaskit/theme/colors';\n\nvar getPrimitiveStyles = function (props) {\n  var cx = props.cx,\n      className = props.className,\n      getStyles = props.getStyles,\n      isDisabled = props.isDisabled,\n      isFocused = props.isFocused,\n      isSelected = props.isSelected;\n  var styles = {\n    alignItems: 'center',\n    backgroundColor: isFocused ? colors.N30 : 'transparent',\n    color: 'inherit',\n    display: 'flex ',\n    paddingBottom: 4,\n    paddingLeft: gridSize() * 2 + \"px\",\n    paddingTop: 4,\n    ':active': {\n      backgroundColor: colors.B50\n    }\n  };\n\n  var augmentedStyles = __assign(__assign({}, getStyles('option', props)), styles);\n\n  var bemClasses = {\n    option: true,\n    'option--is-disabled': isDisabled,\n    'option--is-focused': isFocused,\n    'option--is-selected': isSelected\n  }; // maintain react-select API\n\n  return [augmentedStyles, cx(null, bemClasses, className)];\n}; // maintains function shape\n\n\nvar backgroundColor = themed({\n  light: colors.N40A,\n  dark: colors.DN10\n});\nvar transparent = themed({\n  light: 'transparent',\n  dark: 'transparent'\n}); // the primary color represents the outer or background element\n\nvar getPrimaryColor = function (_a) {\n  var isActive = _a.isActive,\n      isDisabled = _a.isDisabled,\n      isFocused = _a.isFocused,\n      isSelected = _a.isSelected,\n      rest = __rest(_a, [\"isActive\", \"isDisabled\", \"isFocused\", \"isSelected\"]);\n\n  var color = backgroundColor;\n\n  if (isDisabled && isSelected) {\n    color = themed({\n      light: colors.B75,\n      dark: colors.DN200\n    });\n  } else if (isDisabled) {\n    color = themed({\n      light: colors.N20A,\n      dark: colors.DN10\n    });\n  } else if (isActive) {\n    color = themed({\n      light: colors.B75,\n      dark: colors.B200\n    });\n  } else if (isFocused && isSelected) {\n    color = themed({\n      light: colors.B300,\n      dark: colors.B75\n    });\n  } else if (isFocused) {\n    color = themed({\n      light: colors.N50A,\n      dark: colors.DN30\n    });\n  } else if (isSelected) {\n    color = colors.blue;\n  }\n\n  return color(rest);\n}; // the secondary color represents the radio dot or checkmark\n\n\nvar getSecondaryColor = function (_a) {\n  var isActive = _a.isActive,\n      isDisabled = _a.isDisabled,\n      isSelected = _a.isSelected,\n      rest = __rest(_a, [\"isActive\", \"isDisabled\", \"isSelected\"]);\n\n  var color = themed({\n    light: colors.N0,\n    dark: colors.DN10\n  });\n\n  if (isDisabled && isSelected) {\n    color = themed({\n      light: colors.N70,\n      dark: colors.DN10\n    });\n  } else if (isActive && isSelected && !isDisabled) {\n    color = themed({\n      light: colors.B400,\n      dark: colors.DN10\n    });\n  } else if (!isSelected) {\n    color = transparent;\n  }\n\n  return color(rest);\n};\n\nvar ControlOption =\n/** @class */\nfunction (_super) {\n  __extends(ControlOption, _super);\n\n  function ControlOption() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isActive: false\n    };\n\n    _this.onMouseDown = function () {\n      return _this.setState({\n        isActive: true\n      });\n    };\n\n    _this.onMouseUp = function () {\n      return _this.setState({\n        isActive: false\n      });\n    };\n\n    _this.onMouseLeave = function () {\n      return _this.setState({\n        isActive: false\n      });\n    };\n\n    return _this;\n  }\n\n  ControlOption.prototype.render = function () {\n    var _a = this.props,\n        getStyles = _a.getStyles,\n        Icon = _a.Icon,\n        children = _a.children,\n        innerProps = _a.innerProps,\n        innerRef = _a.innerRef,\n        rest = __rest(_a, [\"getStyles\", \"Icon\", \"children\", \"innerProps\", \"innerRef\"]); // prop assignment\n\n\n    var props = __assign(__assign({}, innerProps), {\n      onMouseDown: this.onMouseDown,\n      onMouseUp: this.onMouseUp,\n      onMouseLeave: this.onMouseLeave\n    });\n\n    var _b = __read(getPrimitiveStyles(__assign({\n      getStyles: getStyles\n    }, rest)), 2),\n        styles = _b[0],\n        classes = _b[1];\n\n    return jsx(\"div\", __assign({\n      css: styles,\n      className: classes,\n      ref: innerRef\n    }, props), jsx(\"div\", {\n      css: {\n        alignItems: 'center',\n        display: 'flex ',\n        flexShrink: 0,\n        paddingRight: '4px'\n      }\n    }, !!Icon ? jsx(Icon, {\n      label: \"\",\n      primaryColor: getPrimaryColor(__assign(__assign({}, this.props), this.state)),\n      secondaryColor: getSecondaryColor(__assign(__assign({}, this.props), this.state))\n    }) : null), jsx(\"div\", {\n      css: {\n        textOverflow: 'ellipsis',\n        overflowX: 'hidden',\n        flexGrow: 1,\n        whiteSpace: 'nowrap'\n      }\n    }, children));\n  };\n\n  return ControlOption;\n}(Component);\n\nexport var CheckboxOption = function (props) {\n  return jsx(ControlOption, __assign({\n    Icon: CheckboxIcon\n  }, props));\n};\nexport var RadioOption = function (props) {\n  return jsx(ControlOption, __assign({\n    Icon: RadioIcon\n  }, props));\n};","map":{"version":3,"sources":["../../../src/components/input-options.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends, __read, __rest } from \"tslib\";\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react';\nimport RadioIcon from '@atlaskit/icon/glyph/radio';\nimport CheckboxIcon from '@atlaskit/icon/glyph/checkbox';\nimport { themed } from '@atlaskit/theme/components';\nimport { gridSize } from '@atlaskit/theme/constants';\nimport * as colors from '@atlaskit/theme/colors';\nvar getPrimitiveStyles = function (props) {\n    var cx = props.cx, className = props.className, getStyles = props.getStyles, isDisabled = props.isDisabled, isFocused = props.isFocused, isSelected = props.isSelected;\n    var styles = {\n        alignItems: 'center',\n        backgroundColor: isFocused ? colors.N30 : 'transparent',\n        color: 'inherit',\n        display: 'flex ',\n        paddingBottom: 4,\n        paddingLeft: gridSize() * 2 + \"px\",\n        paddingTop: 4,\n        ':active': {\n            backgroundColor: colors.B50,\n        },\n    };\n    var augmentedStyles = __assign(__assign({}, getStyles('option', props)), styles);\n    var bemClasses = {\n        option: true,\n        'option--is-disabled': isDisabled,\n        'option--is-focused': isFocused,\n        'option--is-selected': isSelected,\n    };\n    // maintain react-select API\n    return [augmentedStyles, cx(null, bemClasses, className)];\n};\n// maintains function shape\nvar backgroundColor = themed({ light: colors.N40A, dark: colors.DN10 });\nvar transparent = themed({ light: 'transparent', dark: 'transparent' });\n// the primary color represents the outer or background element\nvar getPrimaryColor = function (_a) {\n    var isActive = _a.isActive, isDisabled = _a.isDisabled, isFocused = _a.isFocused, isSelected = _a.isSelected, rest = __rest(_a, [\"isActive\", \"isDisabled\", \"isFocused\", \"isSelected\"]);\n    var color = backgroundColor;\n    if (isDisabled && isSelected) {\n        color = themed({ light: colors.B75, dark: colors.DN200 });\n    }\n    else if (isDisabled) {\n        color = themed({ light: colors.N20A, dark: colors.DN10 });\n    }\n    else if (isActive) {\n        color = themed({ light: colors.B75, dark: colors.B200 });\n    }\n    else if (isFocused && isSelected) {\n        color = themed({ light: colors.B300, dark: colors.B75 });\n    }\n    else if (isFocused) {\n        color = themed({ light: colors.N50A, dark: colors.DN30 });\n    }\n    else if (isSelected) {\n        color = colors.blue;\n    }\n    return color(rest);\n};\n// the secondary color represents the radio dot or checkmark\nvar getSecondaryColor = function (_a) {\n    var isActive = _a.isActive, isDisabled = _a.isDisabled, isSelected = _a.isSelected, rest = __rest(_a, [\"isActive\", \"isDisabled\", \"isSelected\"]);\n    var color = themed({ light: colors.N0, dark: colors.DN10 });\n    if (isDisabled && isSelected) {\n        color = themed({ light: colors.N70, dark: colors.DN10 });\n    }\n    else if (isActive && isSelected && !isDisabled) {\n        color = themed({ light: colors.B400, dark: colors.DN10 });\n    }\n    else if (!isSelected) {\n        color = transparent;\n    }\n    return color(rest);\n};\nvar ControlOption = /** @class */ (function (_super) {\n    __extends(ControlOption, _super);\n    function ControlOption() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { isActive: false };\n        _this.onMouseDown = function () { return _this.setState({ isActive: true }); };\n        _this.onMouseUp = function () { return _this.setState({ isActive: false }); };\n        _this.onMouseLeave = function () { return _this.setState({ isActive: false }); };\n        return _this;\n    }\n    ControlOption.prototype.render = function () {\n        var _a = this.props, getStyles = _a.getStyles, Icon = _a.Icon, children = _a.children, innerProps = _a.innerProps, innerRef = _a.innerRef, rest = __rest(_a, [\"getStyles\", \"Icon\", \"children\", \"innerProps\", \"innerRef\"]);\n        // prop assignment\n        var props = __assign(__assign({}, innerProps), { onMouseDown: this.onMouseDown, onMouseUp: this.onMouseUp, onMouseLeave: this.onMouseLeave });\n        var _b = __read(getPrimitiveStyles(__assign({ getStyles: getStyles }, rest)), 2), styles = _b[0], classes = _b[1];\n        return (jsx(\"div\", __assign({ css: styles, className: classes, ref: innerRef }, props),\n            jsx(\"div\", { css: {\n                    alignItems: 'center',\n                    display: 'flex ',\n                    flexShrink: 0,\n                    paddingRight: '4px',\n                } }, !!Icon ? (jsx(Icon, { label: \"\", primaryColor: getPrimaryColor(__assign(__assign({}, this.props), this.state)), secondaryColor: getSecondaryColor(__assign(__assign({}, this.props), this.state)) })) : null),\n            jsx(\"div\", { css: {\n                    textOverflow: 'ellipsis',\n                    overflowX: 'hidden',\n                    flexGrow: 1,\n                    whiteSpace: 'nowrap',\n                } }, children)));\n    };\n    return ControlOption;\n}(Component));\nexport var CheckboxOption = function (props) { return (jsx(ControlOption, __assign({ Icon: CheckboxIcon }, props))); };\nexport var RadioOption = function (props) { return (jsx(ControlOption, __assign({ Icon: RadioIcon }, props))); };\n//# sourceMappingURL=input-options.js.map"]},"metadata":{},"sourceType":"module"}